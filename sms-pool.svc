service SmsPool

version 1.0
author "Nathan Stults"

document SmsMessage {
  required:
  id string
  to string
  message string
  status enum [ REQUESTED, ENQUEUED, SENT, DELIVERED, FAILED ] (REQUESTED)

  optional:
  from string
  callbackUrl string
}

partial message Event {
  required:
  eventId string
  timestamp date
}

partial message ErrorEvent extends Event {
  required:
  error string
}


/* Commands */
#Submits an SMS message to be sent via the configured provider
command SendMessage extends Message {
} emits MessageEnqueued extends Event {
  messageId string
}
fails with MessageRejected extends ErrorEvent

command AddNumbers {
  required:
  quantity integer (1)
} emits NumbersAdded extends Event {
  numbers list[string]
}

/* Queries */
#Request a list of all available numbers
query AvailableNumbersQuery {
} responds with AvailableNumbers {
  required:
  numbers list[string]
}

